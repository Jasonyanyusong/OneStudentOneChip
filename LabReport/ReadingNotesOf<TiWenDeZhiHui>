作为计算机领域（软件+硬件）的工程师/研究人员，我们在工作过程中总会遇见各种问题，比如说我们的环境可能会出现故障，程序可能无法按照预期的情况运行，代码编译不通过等。作为独立研究的个体，我们恐怕需要很长时间去解决问题。这时，提问别人就会显得尤为重要。最为重要的是，如何去提问问题是工程师和科研人员需要掌握的一项基本技能。通过阅读《提问的智慧》和《别像弱智一样提问》，我对提问的方法和方式有了更深刻的见解。

提问问题的好坏并不完全是问题的难度而确定的，虽然提问简单的问题可能会让自己觉得技术不好或者对操作不慎熟练。很有可能作为刚刚接触一个项目的工程师来说，系统环境搞不明白而产生问题是比较常见的。这对于熟悉了环境或使用类似环境工作很长时间的人来说，一些问题未免显得比较简单。然而，真正“智慧”或者说“聪明”的提问往往有很多其他的方面值得研究探讨。

在提问问题之前，需要自己做好研究，保证你提出的问题不会被你在一段时间后解决掉。很多问题其实是你在研究过程中发现了一些异常的情况，没有多加思索便直接把问题抛给别人，希望别人帮我们解决。我们需要考虑回答你问题的人也许要花很多时间在工作和研究上，如果我们一直抛出问题，别人会觉得很烦。为了解决这种尴尬的处境，我们一般会在提问题之前思考这个问题是否被别人提出过，如果提出锅我们可以寻找解决了这个问题的人进行帮助，或者是根据网络上的日志或者文档进行操作，从而节省双方的时间。这也是对科学和对你提问的人展现出一种尊重。

提问题的过程中也需要讲究一些技巧。进行到了这一步，也就说明在我们自己思考解决方案过后并没有找出一个最优解，但是我们寻找到了一些资料。这时，我们最好把这些资料当作附件提交给你提问题的人，一方面可以表现出你对问题的探索态度，另一方面可以让解决问题的效率提高（你给了别人一些思路，他人就有可能根据你找的资料更快的锁定问题或者锁定一个可行的解决方案）。同时，提问题的渠道也要经过三思：你提问题的交流社区应该和当前问题相关的项目难度相似，课题相近。不能出现在讨论相对简单的问题的社区讨论难题，也不能吧简单的问题反馈给解决前沿或者难度较大的讨论社区。有时不要把问题直接发送给别人的邮件。

提出问题不一定会得到快速的解答。一方面，你提出的问题可能对于他人来说难度较大，需要花较长的时间进行研究和解答；另一方面，帮助你解决问题的人可能研究任务非常多，没有时间或者忽略了你的问题。所以提出问题后也要自己思考，不要认为提出了问题你就能很快地获取答案或者反馈。

最后，作为研究者，发现问题时常在的，我们需要在发现问题之后冷静的进行独立思考，寻找潜在的解决方案。如果没有找到解决问题的方案，我们也可以进行相关的学习，找到相关的材料再去提问别人，从而提高研究课题的效率。
