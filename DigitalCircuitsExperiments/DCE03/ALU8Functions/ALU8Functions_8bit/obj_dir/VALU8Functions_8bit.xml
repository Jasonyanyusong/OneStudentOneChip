<?xml version="1.0" ?>
<!-- DESCRIPTION: Verilator output: XML representation of netlist -->
<verilator_xml>
  <files>
    <file id="a" filename="&lt;built-in&gt;" language="1800-2017"/>
    <file id="b" filename="&lt;command-line&gt;" language="1800-2017"/>
    <file id="c" filename="ALU8Functions_8bit.v" language="1800-2017"/>
  </files>
  <module_files>
    <file id="c" filename="ALU8Functions_8bit.v" language="1800-2017"/>
  </module_files>
  <cells>
    <cell loc="c,1,8,1,26" name="$root" submodname="$root" hier="$root"/>
  </cells>
  <netlist>
    <module loc="c,1,8,1,26" name="$root" origName="$root" topModule="1" public="true">
      <var loc="c,2,16,2,33" name="input_mode_select" dtype_id="1" dir="input" pinIndex="1" vartype="logic" origName="input_mode_select" public="true"/>
      <var loc="c,3,16,3,23" name="input_a" dtype_id="2" dir="input" pinIndex="2" vartype="logic" origName="input_a" public="true"/>
      <var loc="c,3,25,3,32" name="input_b" dtype_id="2" dir="input" pinIndex="3" vartype="logic" origName="input_b" public="true"/>
      <var loc="c,4,21,4,34" name="output_result" dtype_id="2" dir="output" pinIndex="4" vartype="logic" origName="output_result" public="true"/>
      <var loc="c,1,8,1,26" name="__VactContinue" dtype_id="3" vartype="bit" origName="__VactContinue"/>
      <var loc="c,1,8,1,26" name="__VstlIterCount" dtype_id="4" vartype="bit" origName="__VstlIterCount"/>
      <var loc="c,1,8,1,26" name="__VicoIterCount" dtype_id="4" vartype="bit" origName="__VicoIterCount"/>
      <var loc="c,1,8,1,26" name="__VactIterCount" dtype_id="4" vartype="bit" origName="__VactIterCount"/>
      <var loc="c,1,8,1,26" name="__VstlTriggered" dtype_id="5" vartype="VlTriggerVec" origName="__VstlTriggered"/>
      <var loc="c,1,8,1,26" name="__VicoTriggered" dtype_id="6" vartype="VlTriggerVec" origName="__VicoTriggered"/>
      <var loc="c,1,8,1,26" name="__VactTriggered" dtype_id="7" vartype="VlTriggerVec" origName="__VactTriggered"/>
      <var loc="c,1,8,1,26" name="__VnbaTriggered" dtype_id="7" vartype="VlTriggerVec" origName="__VnbaTriggered"/>
      <topscope loc="c,1,8,1,26">
        <scope loc="c,1,8,1,26" name="TOP"/>
      </topscope>
      <cfunc loc="c,1,8,1,26" name="trace_init_sub__TOP__0">
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <tracedecl loc="c,2,16,2,33" name="input_mode_select" dtype_id="1"/>
        <tracedecl loc="c,3,16,3,23" name="input_a" dtype_id="2"/>
        <tracedecl loc="c,3,25,3,32" name="input_b" dtype_id="2"/>
        <tracedecl loc="c,4,21,4,34" name="output_result" dtype_id="2"/>
        <tracepushnameprefix loc="c,1,8,1,26"/>
        <tracedecl loc="c,2,16,2,33" name="input_mode_select" dtype_id="1"/>
        <tracedecl loc="c,3,16,3,23" name="input_a" dtype_id="2"/>
        <tracedecl loc="c,3,25,3,32" name="input_b" dtype_id="2"/>
        <tracedecl loc="c,4,21,4,34" name="output_result" dtype_id="2"/>
        <tracepopnameprefix loc="c,1,8,1,26"/>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="trace_init_top">
        <stmtexpr loc="a,0,0,0,0">
          <ccall loc="a,0,0,0,0" dtype_id="8" func="trace_init_sub__TOP__0"/>
        </stmtexpr>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_eval_static"/>
      <cfunc loc="a,0,0,0,0" name="_eval_initial"/>
      <cfunc loc="a,0,0,0,0" name="_eval_final"/>
      <cfunc loc="a,0,0,0,0" name="_eval_settle">
        <var loc="c,1,8,1,26" name="__VstlContinue" dtype_id="3" vartype="bit" origName="__VstlContinue"/>
        <assign loc="c,1,8,1,26" dtype_id="4">
          <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          <varref loc="c,1,8,1,26" name="__VstlIterCount" dtype_id="4"/>
        </assign>
        <assign loc="c,1,8,1,26" dtype_id="10">
          <const loc="c,1,8,1,26" name="1&apos;h1" dtype_id="10"/>
          <varref loc="c,1,8,1,26" name="__VstlContinue" dtype_id="10"/>
        </assign>
        <while loc="c,1,8,1,26">
          <begin>
          </begin>
          <begin>
            <varref loc="c,1,8,1,26" name="__VstlContinue" dtype_id="10"/>
          </begin>
          <begin>
            <assign loc="c,1,8,1,26" dtype_id="10">
              <const loc="c,1,8,1,26" name="1&apos;h0" dtype_id="10"/>
              <varref loc="c,1,8,1,26" name="__VstlContinue" dtype_id="10"/>
            </assign>
            <stmtexpr loc="a,0,0,0,0">
              <ccall loc="a,0,0,0,0" dtype_id="8" func="_eval_triggers__stl"/>
            </stmtexpr>
            <if loc="c,1,8,1,26">
              <cmethodhard loc="c,1,8,1,26" name="any" dtype_id="10">
                <varref loc="c,1,8,1,26" name="__VstlTriggered" dtype_id="10"/>
              </cmethodhard>
              <begin>
                <assign loc="c,1,8,1,26" dtype_id="10">
                  <const loc="c,1,8,1,26" name="1&apos;h1" dtype_id="10"/>
                  <varref loc="c,1,8,1,26" name="__VstlContinue" dtype_id="10"/>
                </assign>
                <if loc="c,1,8,1,26">
                  <lt loc="c,1,8,1,26" dtype_id="10">
                    <const loc="c,1,8,1,26" name="32&apos;h64" dtype_id="9"/>
                    <varref loc="c,1,8,1,26" name="__VstlIterCount" dtype_id="4"/>
                  </lt>
                  <begin>
                    <textblock loc="c,1,8,1,26">
                      <text loc="c,1,8,1,26"/>
                      <stmtexpr loc="c,1,8,1,26">
                        <ccall loc="c,1,8,1,26" dtype_id="8" func="_dump_triggers__stl"/>
                      </stmtexpr>
                      <text loc="c,1,8,1,26"/>
                      <text loc="c,1,8,1,26"/>
                      <text loc="c,1,8,1,26"/>
                    </textblock>
                  </begin>
                </if>
                <assign loc="c,1,8,1,26" dtype_id="4">
                  <add loc="c,1,8,1,26" dtype_id="4">
                    <ccast loc="c,1,8,1,26" dtype_id="9">
                      <const loc="c,1,8,1,26" name="32&apos;h1" dtype_id="9"/>
                    </ccast>
                    <varref loc="c,1,8,1,26" name="__VstlIterCount" dtype_id="4"/>
                  </add>
                  <varref loc="c,1,8,1,26" name="__VstlIterCount" dtype_id="4"/>
                </assign>
                <stmtexpr loc="a,0,0,0,0">
                  <ccall loc="a,0,0,0,0" dtype_id="8" func="_eval_stl"/>
                </stmtexpr>
              </begin>
            </if>
          </begin>
        </while>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_eval_triggers__stl">
        <assign loc="c,1,8,1,26" dtype_id="10">
          <eq loc="c,1,8,1,26" dtype_id="10">
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
            <varref loc="c,1,8,1,26" name="__VstlIterCount" dtype_id="4"/>
          </eq>
          <cmethodhard loc="c,1,8,1,26" name="at" dtype_id="10">
            <varref loc="c,1,8,1,26" name="__VstlTriggered" dtype_id="10"/>
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          </cmethodhard>
        </assign>
        <textblock loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
          <text loc="c,1,8,1,26"/>
          <stmtexpr loc="c,1,8,1,26">
            <ccall loc="c,1,8,1,26" dtype_id="8" func="_dump_triggers__stl"/>
          </stmtexpr>
          <text loc="c,1,8,1,26"/>
          <text loc="c,1,8,1,26"/>
        </textblock>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_dump_triggers__stl">
        <if loc="c,1,8,1,26">
          <and loc="c,1,8,1,26" dtype_id="10">
            <const loc="c,1,8,1,26" name="32&apos;h1" dtype_id="9"/>
            <not loc="c,1,8,1,26" dtype_id="10">
              <ccast loc="c,1,8,1,26" dtype_id="10">
                <cmethodhard loc="c,1,8,1,26" name="any" dtype_id="10">
                  <varref loc="c,1,8,1,26" name="__VstlTriggered" dtype_id="10"/>
                </cmethodhard>
              </ccast>
            </not>
          </and>
          <begin>
            <text loc="c,1,8,1,26"/>
          </begin>
        </if>
        <if loc="c,1,8,1,26">
          <cmethodhard loc="c,1,8,1,26" name="at" dtype_id="10">
            <varref loc="c,1,8,1,26" name="__VstlTriggered" dtype_id="10"/>
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          </cmethodhard>
          <begin>
            <text loc="c,1,8,1,26"/>
          </begin>
        </if>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_eval_stl">
        <if loc="c,1,8,1,26">
          <cmethodhard loc="c,1,8,1,26" name="at" dtype_id="10">
            <varref loc="c,1,8,1,26" name="__VstlTriggered" dtype_id="10"/>
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          </cmethodhard>
          <begin>
            <stmtexpr loc="c,17,18,17,24">
              <ccall loc="c,17,18,17,24" dtype_id="8" func="_ico_sequent__TOP__0"/>
            </stmtexpr>
          </begin>
        </if>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_eval_triggers__ico">
        <assign loc="c,1,8,1,26" dtype_id="10">
          <eq loc="c,1,8,1,26" dtype_id="10">
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
            <varref loc="c,1,8,1,26" name="__VicoIterCount" dtype_id="4"/>
          </eq>
          <cmethodhard loc="c,1,8,1,26" name="at" dtype_id="10">
            <varref loc="c,1,8,1,26" name="__VicoTriggered" dtype_id="10"/>
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          </cmethodhard>
        </assign>
        <textblock loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
          <text loc="c,1,8,1,26"/>
          <stmtexpr loc="c,1,8,1,26">
            <ccall loc="c,1,8,1,26" dtype_id="8" func="_dump_triggers__ico"/>
          </stmtexpr>
          <text loc="c,1,8,1,26"/>
          <text loc="c,1,8,1,26"/>
        </textblock>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_dump_triggers__ico">
        <if loc="c,1,8,1,26">
          <and loc="c,1,8,1,26" dtype_id="10">
            <const loc="c,1,8,1,26" name="32&apos;h1" dtype_id="9"/>
            <not loc="c,1,8,1,26" dtype_id="10">
              <ccast loc="c,1,8,1,26" dtype_id="10">
                <cmethodhard loc="c,1,8,1,26" name="any" dtype_id="10">
                  <varref loc="c,1,8,1,26" name="__VicoTriggered" dtype_id="10"/>
                </cmethodhard>
              </ccast>
            </not>
          </and>
          <begin>
            <text loc="c,1,8,1,26"/>
          </begin>
        </if>
        <if loc="c,1,8,1,26">
          <cmethodhard loc="c,1,8,1,26" name="at" dtype_id="10">
            <varref loc="c,1,8,1,26" name="__VicoTriggered" dtype_id="10"/>
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          </cmethodhard>
          <begin>
            <text loc="c,1,8,1,26"/>
          </begin>
        </if>
      </cfunc>
      <cfunc loc="c,17,18,17,24" name="_ico_sequent__TOP__0">
        <assign loc="c,17,18,17,24" dtype_id="11">
          <and loc="c,17,49,17,51" dtype_id="11">
            <const loc="c,17,49,17,51" name="32&apos;hff" dtype_id="9"/>
            <cond loc="c,17,49,17,51" dtype_id="11">
              <and loc="c,9,14,9,31" dtype_id="9">
                <const loc="c,9,14,9,31" name="32&apos;h4" dtype_id="9"/>
                <ccast loc="c,9,14,9,31" dtype_id="12">
                  <varref loc="c,9,14,9,31" name="input_mode_select" dtype_id="12"/>
                </ccast>
              </and>
              <cond loc="c,17,49,17,51" dtype_id="11">
                <and loc="c,9,14,9,31" dtype_id="9">
                  <const loc="c,9,14,9,31" name="32&apos;h2" dtype_id="9"/>
                  <ccast loc="c,9,14,9,31" dtype_id="12">
                    <varref loc="c,9,14,9,31" name="input_mode_select" dtype_id="12"/>
                  </ccast>
                </and>
                <cond loc="c,17,49,17,51" dtype_id="11">
                  <and loc="c,9,14,9,31" dtype_id="10">
                    <const loc="c,9,14,9,31" name="32&apos;h1" dtype_id="9"/>
                    <ccast loc="c,9,14,9,31" dtype_id="10">
                      <varref loc="c,9,14,9,31" name="input_mode_select" dtype_id="10"/>
                    </ccast>
                  </and>
                  <eq loc="c,17,49,17,51" dtype_id="11">
                    <ccast loc="c,17,41,17,48" dtype_id="11">
                      <varref loc="c,17,41,17,48" name="input_a" dtype_id="11"/>
                    </ccast>
                    <ccast loc="c,17,52,17,59" dtype_id="11">
                      <varref loc="c,17,52,17,59" name="input_b" dtype_id="11"/>
                    </ccast>
                  </eq>
                  <lt loc="c,16,49,16,50" dtype_id="11">
                    <ccast loc="c,16,41,16,48" dtype_id="11">
                      <varref loc="c,16,41,16,48" name="input_a" dtype_id="11"/>
                    </ccast>
                    <ccast loc="c,16,51,16,58" dtype_id="11">
                      <varref loc="c,16,51,16,58" name="input_b" dtype_id="11"/>
                    </ccast>
                  </lt>
                </cond>
                <cond loc="c,15,49,15,50" dtype_id="11">
                  <and loc="c,9,14,9,31" dtype_id="10">
                    <const loc="c,9,14,9,31" name="32&apos;h1" dtype_id="9"/>
                    <ccast loc="c,9,14,9,31" dtype_id="10">
                      <varref loc="c,9,14,9,31" name="input_mode_select" dtype_id="10"/>
                    </ccast>
                  </and>
                  <xor loc="c,15,49,15,50" dtype_id="11">
                    <ccast loc="c,15,41,15,48" dtype_id="11">
                      <varref loc="c,15,41,15,48" name="input_a" dtype_id="11"/>
                    </ccast>
                    <ccast loc="c,15,51,15,58" dtype_id="11">
                      <varref loc="c,15,51,15,58" name="input_b" dtype_id="11"/>
                    </ccast>
                  </xor>
                  <or loc="c,14,49,14,50" dtype_id="11">
                    <ccast loc="c,14,41,14,48" dtype_id="11">
                      <varref loc="c,14,41,14,48" name="input_a" dtype_id="11"/>
                    </ccast>
                    <ccast loc="c,14,51,14,58" dtype_id="11">
                      <varref loc="c,14,51,14,58" name="input_b" dtype_id="11"/>
                    </ccast>
                  </or>
                </cond>
              </cond>
              <cond loc="c,13,49,13,50" dtype_id="11">
                <and loc="c,9,14,9,31" dtype_id="9">
                  <const loc="c,9,14,9,31" name="32&apos;h2" dtype_id="9"/>
                  <ccast loc="c,9,14,9,31" dtype_id="12">
                    <varref loc="c,9,14,9,31" name="input_mode_select" dtype_id="12"/>
                  </ccast>
                </and>
                <cond loc="c,13,49,13,50" dtype_id="11">
                  <and loc="c,9,14,9,31" dtype_id="10">
                    <const loc="c,9,14,9,31" name="32&apos;h1" dtype_id="9"/>
                    <ccast loc="c,9,14,9,31" dtype_id="10">
                      <varref loc="c,9,14,9,31" name="input_mode_select" dtype_id="10"/>
                    </ccast>
                  </and>
                  <and loc="c,13,49,13,50" dtype_id="11">
                    <ccast loc="c,13,41,13,48" dtype_id="11">
                      <varref loc="c,13,41,13,48" name="input_a" dtype_id="11"/>
                    </ccast>
                    <ccast loc="c,13,51,13,58" dtype_id="11">
                      <varref loc="c,13,51,13,58" name="input_b" dtype_id="11"/>
                    </ccast>
                  </and>
                  <and loc="c,12,41,12,42" dtype_id="11">
                    <const loc="c,12,41,12,42" name="32&apos;h1" dtype_id="9"/>
                    <not loc="c,12,41,12,42" dtype_id="10">
                      <ccast loc="c,12,42,12,49" dtype_id="10">
                        <neq loc="c,12,42,12,49" dtype_id="13">
                          <const loc="c,12,42,12,49" name="32&apos;h0" dtype_id="9"/>
                          <ccast loc="c,12,42,12,49" dtype_id="11">
                            <varref loc="c,12,42,12,49" name="input_a" dtype_id="11"/>
                          </ccast>
                        </neq>
                      </ccast>
                    </not>
                  </and>
                </cond>
                <cond loc="c,11,49,11,50" dtype_id="11">
                  <and loc="c,9,14,9,31" dtype_id="10">
                    <const loc="c,9,14,9,31" name="32&apos;h1" dtype_id="9"/>
                    <ccast loc="c,9,14,9,31" dtype_id="10">
                      <varref loc="c,9,14,9,31" name="input_mode_select" dtype_id="10"/>
                    </ccast>
                  </and>
                  <sub loc="c,11,49,11,50" dtype_id="11">
                    <ccast loc="c,11,41,11,48" dtype_id="11">
                      <varref loc="c,11,41,11,48" name="input_a" dtype_id="11"/>
                    </ccast>
                    <ccast loc="c,11,51,11,58" dtype_id="11">
                      <varref loc="c,11,51,11,58" name="input_b" dtype_id="11"/>
                    </ccast>
                  </sub>
                  <add loc="c,10,49,10,50" dtype_id="11">
                    <ccast loc="c,10,41,10,48" dtype_id="11">
                      <varref loc="c,10,41,10,48" name="input_a" dtype_id="11"/>
                    </ccast>
                    <ccast loc="c,10,51,10,58" dtype_id="11">
                      <varref loc="c,10,51,10,58" name="input_b" dtype_id="11"/>
                    </ccast>
                  </add>
                </cond>
              </cond>
            </cond>
          </and>
          <varref loc="c,17,25,17,38" name="output_result" dtype_id="11"/>
        </assign>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_eval_ico">
        <if loc="c,1,8,1,26">
          <cmethodhard loc="c,1,8,1,26" name="at" dtype_id="10">
            <varref loc="c,1,8,1,26" name="__VicoTriggered" dtype_id="10"/>
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          </cmethodhard>
          <begin>
            <stmtexpr loc="c,17,18,17,24">
              <ccall loc="c,17,18,17,24" dtype_id="8" func="_ico_sequent__TOP__0"/>
            </stmtexpr>
          </begin>
        </if>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_eval_triggers__act">
        <textblock loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
          <text loc="c,1,8,1,26"/>
          <stmtexpr loc="c,1,8,1,26">
            <ccall loc="c,1,8,1,26" dtype_id="8" func="_dump_triggers__act"/>
          </stmtexpr>
          <text loc="c,1,8,1,26"/>
          <text loc="c,1,8,1,26"/>
        </textblock>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_dump_triggers__act">
        <if loc="c,1,8,1,26">
          <and loc="c,1,8,1,26" dtype_id="10">
            <const loc="c,1,8,1,26" name="32&apos;h1" dtype_id="9"/>
            <not loc="c,1,8,1,26" dtype_id="10">
              <ccast loc="c,1,8,1,26" dtype_id="10">
                <cmethodhard loc="c,1,8,1,26" name="any" dtype_id="10">
                  <varref loc="c,1,8,1,26" name="__VactTriggered" dtype_id="9"/>
                </cmethodhard>
              </ccast>
            </not>
          </and>
          <begin>
            <text loc="c,1,8,1,26"/>
          </begin>
        </if>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_dump_triggers__nba">
        <if loc="c,1,8,1,26">
          <and loc="c,1,8,1,26" dtype_id="10">
            <const loc="c,1,8,1,26" name="32&apos;h1" dtype_id="9"/>
            <not loc="c,1,8,1,26" dtype_id="10">
              <ccast loc="c,1,8,1,26" dtype_id="10">
                <cmethodhard loc="c,1,8,1,26" name="any" dtype_id="10">
                  <varref loc="c,1,8,1,26" name="__VnbaTriggered" dtype_id="9"/>
                </cmethodhard>
              </ccast>
            </not>
          </and>
          <begin>
            <text loc="c,1,8,1,26"/>
          </begin>
        </if>
      </cfunc>
      <cfunc loc="a,0,0,0,0" name="_eval_act"/>
      <cfunc loc="a,0,0,0,0" name="_eval_nba"/>
      <cfunc loc="a,0,0,0,0" name="_eval">
        <var loc="c,1,8,1,26" name="__VicoContinue" dtype_id="3" vartype="bit" origName="__VicoContinue"/>
        <var loc="c,1,8,1,26" name="__VpreTriggered" dtype_id="7" vartype="VlTriggerVec" origName="__VpreTriggered"/>
        <var loc="c,1,8,1,26" name="__VnbaIterCount" dtype_id="4" vartype="bit" origName="__VnbaIterCount"/>
        <var loc="c,1,8,1,26" name="__VnbaContinue" dtype_id="3" vartype="bit" origName="__VnbaContinue"/>
        <assign loc="c,1,8,1,26" dtype_id="4">
          <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          <varref loc="c,1,8,1,26" name="__VicoIterCount" dtype_id="4"/>
        </assign>
        <assign loc="c,1,8,1,26" dtype_id="10">
          <const loc="c,1,8,1,26" name="1&apos;h1" dtype_id="10"/>
          <varref loc="c,1,8,1,26" name="__VicoContinue" dtype_id="10"/>
        </assign>
        <while loc="c,1,8,1,26">
          <begin>
          </begin>
          <begin>
            <varref loc="c,1,8,1,26" name="__VicoContinue" dtype_id="10"/>
          </begin>
          <begin>
            <assign loc="c,1,8,1,26" dtype_id="10">
              <const loc="c,1,8,1,26" name="1&apos;h0" dtype_id="10"/>
              <varref loc="c,1,8,1,26" name="__VicoContinue" dtype_id="10"/>
            </assign>
            <stmtexpr loc="a,0,0,0,0">
              <ccall loc="a,0,0,0,0" dtype_id="8" func="_eval_triggers__ico"/>
            </stmtexpr>
            <if loc="c,1,8,1,26">
              <cmethodhard loc="c,1,8,1,26" name="any" dtype_id="10">
                <varref loc="c,1,8,1,26" name="__VicoTriggered" dtype_id="10"/>
              </cmethodhard>
              <begin>
                <assign loc="c,1,8,1,26" dtype_id="10">
                  <const loc="c,1,8,1,26" name="1&apos;h1" dtype_id="10"/>
                  <varref loc="c,1,8,1,26" name="__VicoContinue" dtype_id="10"/>
                </assign>
                <if loc="c,1,8,1,26">
                  <lt loc="c,1,8,1,26" dtype_id="10">
                    <const loc="c,1,8,1,26" name="32&apos;h64" dtype_id="9"/>
                    <varref loc="c,1,8,1,26" name="__VicoIterCount" dtype_id="4"/>
                  </lt>
                  <begin>
                    <textblock loc="c,1,8,1,26">
                      <text loc="c,1,8,1,26"/>
                      <stmtexpr loc="c,1,8,1,26">
                        <ccall loc="c,1,8,1,26" dtype_id="8" func="_dump_triggers__ico"/>
                      </stmtexpr>
                      <text loc="c,1,8,1,26"/>
                      <text loc="c,1,8,1,26"/>
                      <text loc="c,1,8,1,26"/>
                    </textblock>
                  </begin>
                </if>
                <assign loc="c,1,8,1,26" dtype_id="4">
                  <add loc="c,1,8,1,26" dtype_id="4">
                    <ccast loc="c,1,8,1,26" dtype_id="9">
                      <const loc="c,1,8,1,26" name="32&apos;h1" dtype_id="9"/>
                    </ccast>
                    <varref loc="c,1,8,1,26" name="__VicoIterCount" dtype_id="4"/>
                  </add>
                  <varref loc="c,1,8,1,26" name="__VicoIterCount" dtype_id="4"/>
                </assign>
                <stmtexpr loc="a,0,0,0,0">
                  <ccall loc="a,0,0,0,0" dtype_id="8" func="_eval_ico"/>
                </stmtexpr>
              </begin>
            </if>
          </begin>
        </while>
        <assign loc="c,1,8,1,26" dtype_id="4">
          <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          <varref loc="c,1,8,1,26" name="__VnbaIterCount" dtype_id="4"/>
        </assign>
        <assign loc="c,1,8,1,26" dtype_id="10">
          <const loc="c,1,8,1,26" name="1&apos;h1" dtype_id="10"/>
          <varref loc="c,1,8,1,26" name="__VnbaContinue" dtype_id="10"/>
        </assign>
        <while loc="c,1,8,1,26">
          <begin>
          </begin>
          <begin>
            <varref loc="c,1,8,1,26" name="__VnbaContinue" dtype_id="10"/>
          </begin>
          <begin>
            <assign loc="c,1,8,1,26" dtype_id="10">
              <const loc="c,1,8,1,26" name="1&apos;h0" dtype_id="10"/>
              <varref loc="c,1,8,1,26" name="__VnbaContinue" dtype_id="10"/>
            </assign>
            <stmtexpr loc="a,0,0,0,0">
              <cmethodhard loc="a,0,0,0,0" name="clear" dtype_id="8">
                <varref loc="a,0,0,0,0" name="__VnbaTriggered" dtype_id="9"/>
              </cmethodhard>
            </stmtexpr>
            <assign loc="c,1,8,1,26" dtype_id="4">
              <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
              <varref loc="c,1,8,1,26" name="__VactIterCount" dtype_id="4"/>
            </assign>
            <assign loc="c,1,8,1,26" dtype_id="10">
              <const loc="c,1,8,1,26" name="1&apos;h1" dtype_id="10"/>
              <varref loc="c,1,8,1,26" name="__VactContinue" dtype_id="10"/>
            </assign>
            <while loc="c,1,8,1,26">
              <begin>
              </begin>
              <begin>
                <varref loc="c,1,8,1,26" name="__VactContinue" dtype_id="10"/>
              </begin>
              <begin>
                <assign loc="c,1,8,1,26" dtype_id="10">
                  <const loc="c,1,8,1,26" name="1&apos;h0" dtype_id="10"/>
                  <varref loc="c,1,8,1,26" name="__VactContinue" dtype_id="10"/>
                </assign>
                <stmtexpr loc="a,0,0,0,0">
                  <ccall loc="a,0,0,0,0" dtype_id="8" func="_eval_triggers__act"/>
                </stmtexpr>
                <if loc="c,1,8,1,26">
                  <cmethodhard loc="c,1,8,1,26" name="any" dtype_id="10">
                    <varref loc="c,1,8,1,26" name="__VactTriggered" dtype_id="9"/>
                  </cmethodhard>
                  <begin>
                    <assign loc="c,1,8,1,26" dtype_id="10">
                      <const loc="c,1,8,1,26" name="1&apos;h1" dtype_id="10"/>
                      <varref loc="c,1,8,1,26" name="__VactContinue" dtype_id="10"/>
                    </assign>
                    <if loc="c,1,8,1,26">
                      <lt loc="c,1,8,1,26" dtype_id="10">
                        <const loc="c,1,8,1,26" name="32&apos;h64" dtype_id="9"/>
                        <varref loc="c,1,8,1,26" name="__VactIterCount" dtype_id="4"/>
                      </lt>
                      <begin>
                        <textblock loc="c,1,8,1,26">
                          <text loc="c,1,8,1,26"/>
                          <stmtexpr loc="c,1,8,1,26">
                            <ccall loc="c,1,8,1,26" dtype_id="8" func="_dump_triggers__act"/>
                          </stmtexpr>
                          <text loc="c,1,8,1,26"/>
                          <text loc="c,1,8,1,26"/>
                          <text loc="c,1,8,1,26"/>
                        </textblock>
                      </begin>
                    </if>
                    <assign loc="c,1,8,1,26" dtype_id="4">
                      <add loc="c,1,8,1,26" dtype_id="4">
                        <ccast loc="c,1,8,1,26" dtype_id="9">
                          <const loc="c,1,8,1,26" name="32&apos;h1" dtype_id="9"/>
                        </ccast>
                        <varref loc="c,1,8,1,26" name="__VactIterCount" dtype_id="4"/>
                      </add>
                      <varref loc="c,1,8,1,26" name="__VactIterCount" dtype_id="4"/>
                    </assign>
                    <stmtexpr loc="a,0,0,0,0">
                      <cmethodhard loc="a,0,0,0,0" name="andNot" dtype_id="8">
                        <varref loc="a,0,0,0,0" name="__VpreTriggered" dtype_id="9"/>
                        <varref loc="a,0,0,0,0" name="__VactTriggered" dtype_id="9"/>
                        <varref loc="a,0,0,0,0" name="__VnbaTriggered" dtype_id="9"/>
                      </cmethodhard>
                    </stmtexpr>
                    <stmtexpr loc="a,0,0,0,0">
                      <cmethodhard loc="a,0,0,0,0" name="set" dtype_id="8">
                        <varref loc="a,0,0,0,0" name="__VnbaTriggered" dtype_id="9"/>
                        <varref loc="a,0,0,0,0" name="__VactTriggered" dtype_id="9"/>
                      </cmethodhard>
                    </stmtexpr>
                    <stmtexpr loc="a,0,0,0,0">
                      <ccall loc="a,0,0,0,0" dtype_id="8" func="_eval_act"/>
                    </stmtexpr>
                  </begin>
                </if>
              </begin>
            </while>
            <if loc="c,1,8,1,26">
              <cmethodhard loc="c,1,8,1,26" name="any" dtype_id="10">
                <varref loc="c,1,8,1,26" name="__VnbaTriggered" dtype_id="9"/>
              </cmethodhard>
              <begin>
                <assign loc="c,1,8,1,26" dtype_id="10">
                  <const loc="c,1,8,1,26" name="1&apos;h1" dtype_id="10"/>
                  <varref loc="c,1,8,1,26" name="__VnbaContinue" dtype_id="10"/>
                </assign>
                <if loc="c,1,8,1,26">
                  <lt loc="c,1,8,1,26" dtype_id="10">
                    <const loc="c,1,8,1,26" name="32&apos;h64" dtype_id="9"/>
                    <varref loc="c,1,8,1,26" name="__VnbaIterCount" dtype_id="4"/>
                  </lt>
                  <begin>
                    <textblock loc="c,1,8,1,26">
                      <text loc="c,1,8,1,26"/>
                      <stmtexpr loc="c,1,8,1,26">
                        <ccall loc="c,1,8,1,26" dtype_id="8" func="_dump_triggers__nba"/>
                      </stmtexpr>
                      <text loc="c,1,8,1,26"/>
                      <text loc="c,1,8,1,26"/>
                      <text loc="c,1,8,1,26"/>
                    </textblock>
                  </begin>
                </if>
                <assign loc="c,1,8,1,26" dtype_id="4">
                  <add loc="c,1,8,1,26" dtype_id="4">
                    <ccast loc="c,1,8,1,26" dtype_id="9">
                      <const loc="c,1,8,1,26" name="32&apos;h1" dtype_id="9"/>
                    </ccast>
                    <varref loc="c,1,8,1,26" name="__VnbaIterCount" dtype_id="4"/>
                  </add>
                  <varref loc="c,1,8,1,26" name="__VnbaIterCount" dtype_id="4"/>
                </assign>
                <stmtexpr loc="a,0,0,0,0">
                  <ccall loc="a,0,0,0,0" dtype_id="8" func="_eval_nba"/>
                </stmtexpr>
              </begin>
            </if>
          </begin>
        </while>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="trace_register">
        <text loc="c,1,8,1,26"/>
        <addrofcfunc loc="c,1,8,1,26" dtype_id="14"/>
        <text loc="c,1,8,1,26"/>
        <text loc="c,1,8,1,26"/>
        <text loc="c,1,8,1,26"/>
        <addrofcfunc loc="c,1,8,1,26" dtype_id="14"/>
        <text loc="c,1,8,1,26"/>
        <text loc="c,1,8,1,26"/>
        <text loc="c,1,8,1,26"/>
        <addrofcfunc loc="c,1,8,1,26" dtype_id="14"/>
        <text loc="c,1,8,1,26"/>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="trace_full_top_0">
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <stmtexpr loc="c,1,8,1,26">
          <ccall loc="c,1,8,1,26" dtype_id="8" func="trace_full_sub_0"/>
        </stmtexpr>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="trace_full_sub_0">
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <traceinc loc="c,2,16,2,33" dtype_id="1">
          <varref loc="c,2,16,2,33" name="input_mode_select" dtype_id="12"/>
        </traceinc>
        <traceinc loc="c,3,16,3,23" dtype_id="2">
          <varref loc="c,3,16,3,23" name="input_a" dtype_id="11"/>
        </traceinc>
        <traceinc loc="c,3,25,3,32" dtype_id="2">
          <varref loc="c,3,25,3,32" name="input_b" dtype_id="11"/>
        </traceinc>
        <traceinc loc="c,4,21,4,34" dtype_id="2">
          <varref loc="c,4,21,4,34" name="output_result" dtype_id="11"/>
        </traceinc>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="trace_chg_top_0">
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <stmtexpr loc="c,1,8,1,26">
          <ccall loc="c,1,8,1,26" dtype_id="8" func="trace_chg_sub_0"/>
        </stmtexpr>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="trace_chg_sub_0">
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <traceinc loc="c,2,16,2,33" dtype_id="1">
          <varref loc="c,2,16,2,33" name="input_mode_select" dtype_id="12"/>
        </traceinc>
        <traceinc loc="c,3,16,3,23" dtype_id="2">
          <varref loc="c,3,16,3,23" name="input_a" dtype_id="11"/>
        </traceinc>
        <traceinc loc="c,3,25,3,32" dtype_id="2">
          <varref loc="c,3,25,3,32" name="input_b" dtype_id="11"/>
        </traceinc>
        <traceinc loc="c,4,21,4,34" dtype_id="2">
          <varref loc="c,4,21,4,34" name="output_result" dtype_id="11"/>
        </traceinc>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="trace_cleanup">
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <var loc="c,1,8,1,26" name="__Vm_traceActivity" dtype_id="15" vartype="" origName="__Vm_traceActivity"/>
        <cstmt loc="c,1,8,1,26">
          <text loc="c,1,8,1,26"/>
        </cstmt>
        <assign loc="c,1,8,1,26" dtype_id="10">
          <const loc="c,1,8,1,26" name="1&apos;h0" dtype_id="10"/>
          <arraysel loc="c,1,8,1,26" dtype_id="10">
            <varref loc="c,1,8,1,26" name="__Vm_traceActivity" dtype_id="15"/>
            <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          </arraysel>
        </assign>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="_eval_debug_assertions">
        <if loc="c,2,16,2,33">
          <and loc="c,2,16,2,33" dtype_id="1">
            <varref loc="c,2,16,2,33" name="input_mode_select" dtype_id="1"/>
            <const loc="c,2,16,2,33" name="8&apos;hf8" dtype_id="2"/>
          </and>
          <begin>
            <cstmt loc="c,2,16,2,33">
              <text loc="c,2,16,2,33"/>
            </cstmt>
          </begin>
        </if>
      </cfunc>
      <cfunc loc="c,1,8,1,26" name="_ctor_var_reset">
        <creset loc="c,2,16,2,33">
          <varref loc="c,2,16,2,33" name="input_mode_select" dtype_id="1"/>
        </creset>
        <creset loc="c,3,16,3,23">
          <varref loc="c,3,16,3,23" name="input_a" dtype_id="2"/>
        </creset>
        <creset loc="c,3,25,3,32">
          <varref loc="c,3,25,3,32" name="input_b" dtype_id="2"/>
        </creset>
        <creset loc="c,4,21,4,34">
          <varref loc="c,4,21,4,34" name="output_result" dtype_id="2"/>
        </creset>
        <creset loc="c,1,8,1,26">
          <varref loc="c,1,8,1,26" name="__VstlIterCount" dtype_id="4"/>
        </creset>
        <creset loc="c,1,8,1,26">
          <varref loc="c,1,8,1,26" name="__VicoIterCount" dtype_id="4"/>
        </creset>
        <creset loc="c,1,8,1,26">
          <varref loc="c,1,8,1,26" name="__VactIterCount" dtype_id="4"/>
        </creset>
        <creset loc="c,1,8,1,26">
          <varref loc="c,1,8,1,26" name="__VactContinue" dtype_id="3"/>
        </creset>
      </cfunc>
    </module>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit__Syms.cpp"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit__Syms.h"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit.h"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit.cpp"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit_$root.h"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit_$root__Slow.cpp"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit_$root__DepSet_h1ab83a7c__0__Slow.cpp"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit_$root__DepSet_hc982e820__0__Slow.cpp"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit_$root__DepSet_h1ab83a7c__0.cpp"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit_$root__DepSet_hc982e820__0.cpp"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit__Trace__0__Slow.cpp"/>
    <cfile loc="a,0,0,0,0" name="obj_dir/VALU8Functions_8bit__Trace__0.cpp"/>
    <typetable loc="a,0,0,0,0">
      <basicdtype loc="c,12,41,12,42" id="13" name="logic"/>
      <basicdtype loc="c,2,10,2,11" id="1" name="logic" left="2" right="0"/>
      <basicdtype loc="c,3,10,3,11" id="2" name="logic" left="7" right="0"/>
      <basicdtype loc="c,9,14,9,31" id="9" name="logic" left="31" right="0"/>
      <voiddtype loc="a,0,0,0,0" id="8"/>
      <basicdtype loc="c,1,8,1,26" id="5" name="VlTriggerVec"/>
      <basicdtype loc="c,1,8,1,26" id="4" name="bit" left="31" right="0"/>
      <basicdtype loc="c,1,8,1,26" id="3" name="bit"/>
      <basicdtype loc="c,1,8,1,26" id="6" name="VlTriggerVec"/>
      <basicdtype loc="c,1,8,1,26" id="7" name="VlTriggerVec"/>
      <basicdtype loc="c,1,8,1,26" id="16" name="bit"/>
      <unpackarraydtype loc="c,1,8,1,26" id="15" sub_dtype_id="16">
        <range loc="c,1,8,1,26">
          <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
          <const loc="c,1,8,1,26" name="32&apos;h0" dtype_id="9"/>
        </range>
      </unpackarraydtype>
      <basicdtype loc="c,1,8,1,26" id="14" name="chandle" left="63" right="0"/>
      <basicdtype loc="c,1,8,1,26" id="10" name="logic" left="31" right="0"/>
      <basicdtype loc="c,9,14,9,31" id="12" name="logic" left="31" right="0"/>
      <basicdtype loc="c,17,41,17,48" id="11" name="logic" left="31" right="0"/>
    </typetable>
    <constpool>
      <module loc="a,0,0,0,0" name="@CONST-POOL@" origName="@CONST-POOL@">
        <scope loc="a,0,0,0,0" name="TOP"/>
      </module>
    </constpool>
  </netlist>
</verilator_xml>
